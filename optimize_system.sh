#!/bin/bash

# =============================================================================
# System Optimization Script
# –°–∫—Ä–∏–ø—Ç –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ Ubuntu —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
# =============================================================================

set -euo pipefail  # –°—Ç—Ä–æ–≥–∏–π —Ä–µ–∂–∏–º

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    cat << EOF
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–û–ü–¶–ò–ò]

–û–ø—Ü–∏–∏:
    -s, --swap SIZE          –†–∞–∑–º–µ—Ä swap –≤ GB [–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 50% –æ—Ç RAM]
    -f, --filesystem         –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É
    -n, --network            –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–µ—Ç–µ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    -m, --memory             –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞–º—è—Ç–∏
    -d, --disk               –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∏—Å–∫–∞
    -l, --limits             –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ª–∏–º–∏—Ç—ã
    -k, --kernel             –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —è–¥—Ä–∞
    -a, --all                –í—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
    -b, --backup             –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –∫–æ–Ω—Ñ–∏–≥–æ–≤
    -r, --restore            –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
    -v, --verbose            –ü–æ–¥—Ä–æ–±–Ω—ã–π –≤—ã–≤–æ–¥
    -h, --help               –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–ü—Ä–∏–º–µ—Ä—ã:
    $0 -a                      # –í—Å–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
    $0 -s 4 -f -n             # Swap 4GB + —Ñ–∞–π–ª–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ + —Å–µ—Ç—å
    $0 -m -k                  # –ü–∞–º—è—Ç—å + —è–¥—Ä–æ
    $0 -b                     # –¢–æ–ª—å–∫–æ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è
    $0 -r                     # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ

EOF
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ root –ø—Ä–∞–≤
check_root() {
    if [[ $EUID -ne 0 ]]; then
        log_error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω —Å –ø—Ä–∞–≤–∞–º–∏ root (sudo)"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã
check_system() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–∞
    if ! grep -q "Ubuntu" /etc/os-release; then
        log_warning "–°–∫—Ä–∏–ø—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–ª—Å—è –Ω–∞ Ubuntu. –î—Ä—É–≥–∏–µ –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤—ã –º–æ–≥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
    local arch=$(uname -m)
    if [[ "$arch" != "x86_64" && "$arch" != "aarch64" ]]; then
        log_warning "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ $arch –º–æ–∂–µ—Ç —Ç—Ä–µ–±–æ–≤–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
    fi
    
    log_success "–°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ
get_system_info() {
    echo "============================================================================="
    log_info "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ"
    echo "============================================================================="
    
    echo "üñ•Ô∏è  –°–∏—Å—Ç–µ–º–∞:"
    echo "  ‚Ä¢ –û–°: $(lsb_release -d | cut -f2)"
    echo "  ‚Ä¢ –Ø–¥—Ä–æ: $(uname -r)"
    echo "  ‚Ä¢ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $(uname -m)"
    echo
    
    echo "üíæ –ü–∞–º—è—Ç—å:"
    local total_mem=$(free -h | awk 'NR==2{print $2}')
    local used_mem=$(free -h | awk 'NR==2{print $3}')
    local free_mem=$(free -h | awk 'NR==2{print $4}')
    echo "  ‚Ä¢ –í—Å–µ–≥–æ: $total_mem"
    echo "  ‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: $used_mem"
    echo "  ‚Ä¢ –°–≤–æ–±–æ–¥–Ω–æ: $free_mem"
    echo
    
    echo "üíø –î–∏—Å–∫–∏:"
    df -h | grep -E '^/dev/' | while read line; do
        local device=$(echo $line | awk '{print $1}')
        local size=$(echo $line | awk '{print $2}')
        local used=$(echo $line | awk '{print $3}')
        local mount=$(echo $line | awk '{print $6}')
        echo "  ‚Ä¢ $device: $size (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: $used) -> $mount"
    done
    echo
    
    echo "üåê –°–µ—Ç—å:"
    ip route | grep default | awk '{print "  ‚Ä¢ –®–ª—é–∑: " $3}'
    echo "  ‚Ä¢ DNS: $(cat /etc/resolv.conf | grep nameserver | head -1 | awk '{print $2}')"
    echo
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π
create_backup() {
    local backup_dir="/opt/system_backup_$(date +%Y%m%d_%H%M%S)"
    
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π –≤ $backup_dir"
    
    mkdir -p "$backup_dir"
    
    # –†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –≤–∞–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    local files=(
        "/etc/sysctl.conf"
        "/etc/security/limits.conf"
        "/etc/fstab"
        "/etc/systemd/system.conf"
        "/etc/systemd/user.conf"
    )
    
    for file in "${files[@]}"; do
        if [[ -f "$file" ]]; then
            cp "$file" "$backup_dir/"
            log_info "–°–æ—Ö—Ä–∞–Ω–µ–Ω: $file"
        fi
    done
    
    # –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è sysctl –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    sysctl -a > "$backup_dir/sysctl_current.conf" 2>/dev/null || true
    
    log_success "–†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ —Å–æ–∑–¥–∞–Ω—ã –≤ $backup_dir"
    echo "$backup_dir" > /tmp/last_backup_path
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
restore_backup() {
    local backup_path=""
    
    if [[ -f "/tmp/last_backup_path" ]]; then
        backup_path=$(cat /tmp/last_backup_path)
    else
        log_error "–ü—É—Ç—å –∫ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
    
    if [[ ! -d "$backup_path" ]]; then
        log_error "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $backup_path"
        exit 1
    fi
    
    log_warning "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏: $backup_path"
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        log_info "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ"
        exit 0
    fi
    
    # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
    if [[ -f "$backup_path/sysctl.conf" ]]; then
        cp "$backup_path/sysctl.conf" /etc/sysctl.conf
        log_success "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: /etc/sysctl.conf"
    fi
    
    if [[ -f "$backup_path/limits.conf" ]]; then
        cp "$backup_path/limits.conf" /etc/security/limits.conf
        log_success "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: /etc/security/limits.conf"
    fi
    
    if [[ -f "$backup_path/fstab" ]]; then
        cp "$backup_path/fstab" /etc/fstab
        log_success "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: /etc/fstab"
    fi
    
    # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    sysctl -p
    log_success "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ swap
setup_swap() {
    local swap_size=$1
    
    log_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ swap —Ä–∞–∑–º–µ—Ä–æ–º ${swap_size}GB..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ swap
    if swapon --show | grep -q "/swapfile"; then
        log_warning "Swap —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        read -p "–ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å? (y/N): " -n 1 -r
        echo
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            log_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ swap –ø—Ä–æ–ø—É—â–µ–Ω–∞"
            return 0
        fi
        
        # –û—Ç–∫–ª—é—á–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ swap
        swapoff /swapfile 2>/dev/null || true
        rm -f /swapfile
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ swap —Ñ–∞–π–ª–∞
    fallocate -l ${swap_size}G /swapfile
    chmod 600 /swapfile
    mkswap /swapfile
    swapon /swapfile
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ fstab
    if ! grep -q "/swapfile" /etc/fstab; then
        echo "/swapfile none swap sw 0 0" >> /etc/fstab
    fi
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ swappiness
    echo "vm.swappiness = 10" >> /etc/sysctl.conf
    
    log_success "Swap –Ω–∞—Å—Ç—Ä–æ–µ–Ω: ${swap_size}GB"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
optimize_filesystem() {
    log_info "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã..."
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ noatime –¥–ª—è –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º
    sed -i 's/defaults/defaults,noatime/g' /etc/fstab
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ readahead –¥–ª—è SSD
    if command -v blockdev &> /dev/null; then
        for device in /dev/sd*; do
            if [[ -b "$device" ]]; then
                blockdev --setra 32768 "$device" 2>/dev/null || true
            fi
        done
    fi
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ I/O scheduler
    for device in /sys/block/sd*/queue/scheduler; do
        if [[ -f "$device" ]]; then
            echo "mq-deadline" > "$device" 2>/dev/null || true
        fi
    done
    
    log_success "–§–∞–π–ª–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Å–µ—Ç–µ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
optimize_network() {
    log_info "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å–µ—Ç–µ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫..."
    
    # –°–µ—Ç–µ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    cat >> /etc/sysctl.conf << EOF

# Network optimization
net.core.rmem_default = 262144
net.core.rmem_max = 16777216
net.core.wmem_default = 262144
net.core.wmem_max = 16777216
net.core.netdev_max_backlog = 5000
net.core.somaxconn = 65535
net.ipv4.tcp_rmem = 4096 65536 16777216
net.ipv4.tcp_wmem = 4096 65536 16777216
net.ipv4.tcp_congestion_control = bbr
net.ipv4.tcp_slow_start_after_idle = 0
net.ipv4.tcp_tw_reuse = 1
net.ipv4.ip_local_port_range = 1024 65535
net.ipv4.tcp_fin_timeout = 15
net.ipv4.tcp_keepalive_time = 300
net.ipv4.tcp_keepalive_probes = 5
net.ipv4.tcp_keepalive_intvl = 15
net.ipv4.tcp_max_syn_backlog = 65536
net.ipv4.tcp_max_tw_buckets = 2000000
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_fastopen = 3
net.ipv4.tcp_mtu_probing = 1
net.ipv4.tcp_ecn = 1
net.ipv4.tcp_fack = 1
net.ipv4.tcp_sack = 1
net.ipv4.tcp_timestamps = 1
net.ipv4.tcp_window_scaling = 1
net.ipv4.tcp_no_metrics_save = 1
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_mem = 786432 1048576 1572864
net.ipv4.udp_rmem_min = 8192
net.ipv4.udp_wmem_min = 8192
net.core.default_qdisc = fq
EOF

    log_success "–°–µ—Ç–µ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø–∞–º—è—Ç–∏
optimize_memory() {
    log_info "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–∞–º—è—Ç–∏..."
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–∞–º—è—Ç–∏
    cat >> /etc/sysctl.conf << EOF

# Memory optimization
vm.swappiness = 10
vm.dirty_ratio = 15
vm.dirty_background_ratio = 5
vm.dirty_expire_centisecs = 3000
vm.dirty_writeback_centisecs = 500
vm.min_free_kbytes = 65536
vm.overcommit_memory = 1
vm.overcommit_ratio = 50
vm.panic_on_oom = 0
vm.oom_kill_allocating_task = 0
vm.oom_dump_tasks = 1
vm.lowmem_reserve_ratio = 256 256 32
vm.drop_caches = 0
EOF

    log_success "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞–º—è—Ç–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –¥–∏—Å–∫–∞
optimize_disk() {
    log_info "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–∏—Å–∫–∞..."
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–∏—Å–∫–∞
    cat >> /etc/sysctl.conf << EOF

# Disk optimization
fs.file-max = 2097152
fs.nr_open = 2097152
fs.inotify.max_user_watches = 524288
fs.inotify.max_user_instances = 512
fs.inotify.max_queued_events = 512
EOF

    log_success "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∏—Å–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–∏–º–∏—Ç–æ–≤
setup_limits() {
    log_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ª–∏–º–∏—Ç–æ–≤..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
    cp /etc/security/limits.conf /etc/security/limits.conf.backup
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ª–∏–º–∏—Ç–æ–≤
    cat >> /etc/security/limits.conf << EOF

# System optimization limits
* soft nofile 1048576
* hard nofile 1048576
* soft nproc 32768
* hard nproc 32768
* soft memlock unlimited
* hard memlock unlimited
* soft core unlimited
* hard core unlimited
root soft nofile 1048576
root hard nofile 1048576
root soft nproc 32768
root hard nproc 32768
EOF

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ systemd –ª–∏–º–∏—Ç–æ–≤
    mkdir -p /etc/systemd/system.conf.d
    cat > /etc/systemd/system.conf.d/limits.conf << EOF
[Manager]
DefaultLimitNOFILE=1048576
DefaultLimitNPROC=32768
EOF

    log_success "–°–∏—Å—Ç–µ–º–Ω—ã–µ –ª–∏–º–∏—Ç—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —è–¥—Ä–∞
optimize_kernel() {
    log_info "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —è–¥—Ä–∞..."
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —è–¥—Ä–∞
    cat >> /etc/sysctl.conf << EOF

# Kernel optimization
kernel.panic = 10
kernel.panic_on_oops = 1
kernel.keys.root_maxkeys = 1000000
kernel.keys.root_maxbytes = 25000000
kernel.keys.maxkeys = 2000
kernel.keys.maxbytes = 20000
kernel.sysrq = 1
kernel.core_uses_pid = 1
kernel.core_pattern = core.%e.%p.%t
kernel.msgmax = 65536
kernel.msgmnb = 65536
kernel.msgmni = 2878
kernel.sem = 250 32000 100 142
kernel.shmmax = 68719476736
kernel.shmall = 4294967296
kernel.shmmni = 4096
kernel.threads-max = 143360
kernel.pid_max = 65536
kernel.randomize_va_space = 2
kernel.kptr_restrict = 1
kernel.dmesg_restrict = 1
kernel.unprivileged_bpf_disabled = 1
kernel.perf_event_paranoid = 2
EOF

    log_success "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —è–¥—Ä–∞ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
apply_changes() {
    log_info "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π..."
    
    # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ sysctl –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    sysctl -p
    
    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ systemd
    systemctl daemon-reload
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ swap
    if swapon --show | grep -q "/swapfile"; then
        log_success "Swap –∞–∫—Ç–∏–≤–µ–Ω"
    fi
    
    log_success "–ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
show_results() {
    echo
    echo "============================================================================="
    log_success "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    echo "============================================================================="
    echo
    
    echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:"
    echo
    
    echo "üíæ –ü–∞–º—è—Ç—å –∏ Swap:"
    echo "  ‚Ä¢ Swap: $(swapon --show | grep swapfile | awk '{print $3}' || echo '–Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')"
    echo "  ‚Ä¢ Swappiness: $(sysctl vm.swappiness | awk '{print $3}')"
    echo "  ‚Ä¢ Dirty ratio: $(sysctl vm.dirty_ratio | awk '{print $3}')"
    echo
    
    echo "üåê –°–µ—Ç—å:"
    echo "  ‚Ä¢ TCP congestion control: $(sysctl net.ipv4.tcp_congestion_control | awk '{print $3}')"
    echo "  ‚Ä¢ TCP max connections: $(sysctl net.core.somaxconn | awk '{print $3}')"
    echo "  ‚Ä¢ TCP window scaling: $(sysctl net.ipv4.tcp_window_scaling | awk '{print $3}')"
    echo
    
    echo "üíø –§–∞–π–ª–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞:"
    echo "  ‚Ä¢ Max open files: $(sysctl fs.file-max | awk '{print $3}')"
    echo "  ‚Ä¢ Inotify watches: $(sysctl fs.inotify.max_user_watches | awk '{print $3}')"
    echo
    
    echo "üîß –°–∏—Å—Ç–µ–º–Ω—ã–µ –ª–∏–º–∏—Ç—ã:"
    echo "  ‚Ä¢ Soft nofile: $(ulimit -Sn)"
    echo "  ‚Ä¢ Hard nofile: $(ulimit -Hn)"
    echo "  ‚Ä¢ Soft nproc: $(ulimit -Su)"
    echo "  ‚Ä¢ Hard nproc: $(ulimit -Hu)"
    echo
    
    echo "‚ö†Ô∏è  –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
    echo "  ‚Ä¢ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π"
    echo "  ‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ—Å–ª–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏"
    echo "  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫"
    echo "  ‚Ä¢ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ /opt/system_backup_*"
    echo
    
    echo "üîó –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å swap: free -h"
    echo "  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ—Ç—å: ss -tuln"
    echo "  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–∏–º–∏—Ç—ã: ulimit -a"
    echo "  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å sysctl: sysctl -a | grep -E '(vm|net|fs)'"
    echo
}

# =============================================================================
# –û–°–ù–û–í–ù–ê–Ø –õ–û–ì–ò–ö–ê
# =============================================================================

main() {
    # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    local SWAP_SIZE=""
    local OPTIMIZE_FS=false
    local OPTIMIZE_NETWORK=false
    local OPTIMIZE_MEMORY=false
    local OPTIMIZE_DISK=false
    local SETUP_LIMITS=false
    local OPTIMIZE_KERNEL=false
    local DO_ALL=false
    local CREATE_BACKUP=false
    local RESTORE_BACKUP=false
    local VERBOSE=false
    
    # –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    while [[ $# -gt 0 ]]; do
        case $1 in
            -s|--swap)
                SWAP_SIZE="$2"
                shift 2
                ;;
            -f|--filesystem)
                OPTIMIZE_FS=true
                shift
                ;;
            -n|--network)
                OPTIMIZE_NETWORK=true
                shift
                ;;
            -m|--memory)
                OPTIMIZE_MEMORY=true
                shift
                ;;
            -d|--disk)
                OPTIMIZE_DISK=true
                shift
                ;;
            -l|--limits)
                SETUP_LIMITS=true
                shift
                ;;
            -k|--kernel)
                OPTIMIZE_KERNEL=true
                shift
                ;;
            -a|--all)
                DO_ALL=true
                shift
                ;;
            -b|--backup)
                CREATE_BACKUP=true
                shift
                ;;
            -r|--restore)
                RESTORE_BACKUP=true
                shift
                ;;
            --verbose)
                VERBOSE=true
                shift
                ;;
            -h|--help)
                show_help
                exit 0
                ;;
            *)
                log_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $1"
                show_help
                exit 1
                ;;
        esac
    done
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏
    check_root
    
    echo "============================================================================="
    echo "‚ö° System Optimization Script"
    echo "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è Ubuntu —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"
    echo "============================================================================="
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã
    check_system
    
    # –ü–æ–∫–∞–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ
    get_system_info
    
    # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
    if [[ "$RESTORE_BACKUP" == "true" ]]; then
        restore_backup
        exit 0
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
    if [[ "$CREATE_BACKUP" == "true" ]] || [[ "$DO_ALL" == "true" ]]; then
        create_backup
    fi
    
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ swap
    if [[ -z "$SWAP_SIZE" ]]; then
        local total_mem=$(free -m | awk 'NR==2{printf "%.0f", $2}')
        SWAP_SIZE=$((total_mem / 2 / 1024))  # 50% –æ—Ç RAM –≤ GB
        if [[ "$SWAP_SIZE" -lt 1 ]]; then
            SWAP_SIZE=1
        fi
    fi
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π
    if [[ "$DO_ALL" == "true" ]]; then
        OPTIMIZE_FS=true
        OPTIMIZE_NETWORK=true
        OPTIMIZE_MEMORY=true
        OPTIMIZE_DISK=true
        SETUP_LIMITS=true
        OPTIMIZE_KERNEL=true
    fi
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ swap
    if [[ -n "$SWAP_SIZE" ]]; then
        setup_swap "$SWAP_SIZE"
    fi
    
    # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
    if [[ "$OPTIMIZE_FS" == "true" ]]; then
        optimize_filesystem
    fi
    
    # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å–µ—Ç–∏
    if [[ "$OPTIMIZE_NETWORK" == "true" ]]; then
        optimize_network
    fi
    
    # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–∞–º—è—Ç–∏
    if [[ "$OPTIMIZE_MEMORY" == "true" ]]; then
        optimize_memory
    fi
    
    # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–∏—Å–∫–∞
    if [[ "$OPTIMIZE_DISK" == "true" ]]; then
        optimize_disk
    fi
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–∏–º–∏—Ç–æ–≤
    if [[ "$SETUP_LIMITS" == "true" ]]; then
        setup_limits
    fi
    
    # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —è–¥—Ä–∞
    if [[ "$OPTIMIZE_KERNEL" == "true" ]]; then
        optimize_kernel
    fi
    
    # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    apply_changes
    
    # –ü–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    show_results
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@" 